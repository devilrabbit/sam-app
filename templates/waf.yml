AWSTemplateFormatVersion: 2010-09-09
Description: WAF

Parameters:
  IPAddresses:
    Type: String
  AdminIPAddresses:
    Type: String
  AdminPathPattern:
    Type: String
  DeliveryStreamArn:
    Type: String

Resources:
  WAFv2WebACL:
    Type: AWS::WAFv2::WebACL
    Properties:
      DefaultAction:
        Block: {}
      Name: WAFv2WebACL
      Rules:
        - Name: AWS-AWSManagedRulesAmazonIpReputationList
          Priority: 1
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesAmazonIpReputationList
          OverrideAction:
            None: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesAmazonIpReputationList
            SampledRequestsEnabled: false
        - Name: AWS-AWSManagedRulesCommonRuleSet
          Priority: 2
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesCommonRuleSet
              ExcludedRules:
                - Name: SizeRestrictions_BODY
          OverrideAction:
            None: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesCommonRuleSet
            SampledRequestsEnabled: false
        - Name: AWS-AWSManagedRulesKnownBadInputsRuleSet
          Priority: 3
          Statement:
            ManagedRuleGroupStatement:
              VendorName: AWS
              Name: AWSManagedRulesKnownBadInputsRuleSet
          OverrideAction:
            None: {}
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AWSManagedRulesKnownBadInputsRuleSet
            SampledRequestsEnabled: false
        - Name: SizeRestrictionsBODY-rule
          Action:
            Block: {}
          Priority: 100
          Statement:
            AndStatement:
              Statements:
                - SizeConstraintStatement:
                    FieldToMatch:
                      Body: {}
                    ComparisonOperator: GT
                    Size: 10240
                    TextTransformations:
                      - Type: NONE
                        Priority: 0
                - NotStatement:
                    Statement:
                      RegexPatternSetReferenceStatement:
                        Arn: !GetAtt AdminPathPatternSet.Arn
                        FieldToMatch:
                          UriPath: {}
                        TextTransformations:
                          - Type: URL_DECODE
                            Priority: 0
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AllowMetric
            SampledRequestsEnabled: false
        - Name: AllowRule
          Action:
            Allow: {}
          Priority: 100
          Statement:
            AndStatement:
              Statements:
                - NotStatement:
                    Statement:
                      RegexPatternSetReferenceStatement:
                        Arn: !GetAtt AdminPathPatternSet.Arn
                        FieldToMatch:
                          UriPath: {}
                        TextTransformations:
                          - Type: "URL_DECODE"
                            Priority: 0
                - IPSetReferenceStatement:
                    Arn: !GetAtt AllowIPSet.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AllowMetric
            SampledRequestsEnabled: false
        - Name: AdminAllowRule
          Action:
            Allow: {}
          Priority: 101
          Statement:
            AndStatement:
              Statements:
                - RegexPatternSetReferenceStatement:
                    Arn: !GetAtt AdminPathPatternSet.Arn
                    FieldToMatch:
                      UriPath: {}
                    TextTransformations:
                      - Type: "URL_DECODE"
                        Priority: 0
                - IPSetReferenceStatement:
                    Arn: !GetAtt AdminAllowIPSet.Arn
          VisibilityConfig:
            CloudWatchMetricsEnabled: true
            MetricName: AdminAllowMetric
            SampledRequestsEnabled: false
      Scope: CLOUDFRONT
      VisibilityConfig:
        CloudWatchMetricsEnabled: true
        MetricName: WAFWebACLMetrics
        SampledRequestsEnabled: false

  AllowIPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        - !Ref IPAddresses
      IPAddressVersion: IPV4
      Scope: CLOUDFRONT

  AdminAllowIPSet:
    Type: AWS::WAFv2::IPSet
    Properties:
      Addresses:
        - !Ref AdminIPAddresses
      IPAddressVersion: IPV4
      Scope: CLOUDFRONT

  AdminPathPatternSet:
    Type: AWS::WAFv2::RegexPatternSet
    Properties:
      RegularExpressionList:
        - !Sub "^${AdminPathPattern}*"
      Scope: CLOUDFRONT

  ConfigureWAFLogs:
    Type: 'Custom::ConfigureWAFLogs'
    Properties:
      ServiceToken: !GetAtt CustomResource.Arn
      WAFWebACLArn: !GetAtt WAFv2WebACL.Arn
      DeliveryStreamArn: !Ref DeliveryStreamArn

  CustomResourceLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: LambdaBasicExecRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: WAFAccess
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'wafv2:GetWebACL'
                  - 'wafv2:UpdateWebACL'
                  - 'wafv2:PutLoggingConfiguration'
                  - 'wafv2:DeleteLoggingConfiguration'
                Resource:
                  - !GetAtt WAFv2WebACL.Arn
              - Effect: Allow
                Action: 'iam:CreateServiceLinkedRole'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:iam::*:role/aws-service-role/wafv2.amazonaws.com/AWSServiceRoleForWAFV2Logging'
                Condition:
                  StringLike:
                    iam:AWSServiceName: 'wafv2.amazonaws.com'
  CustomResource:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: This lambda function configures logging enabled in the CloudFormation template.
      Handler: index.handler
      Role: !GetAtt CustomResourceLambdaRole.Arn
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          request_type = event['RequestType'].upper() if ('RequestType' in event) else ""
          def handler(event, context):
            try:
              client = boto3.client('wafv2')
              if 'CREATE' in request_type:
                response = client.put_logging_configuration(
                  LoggingConfiguration={
                    'ResourceArn': event['ResourceProperties']['WAFWebACLArn'],
                    'LogDestinationConfigs': [event['ResourceProperties']['DeliveryStreamArn']]
                  }
                )
              elif 'UPDATE' in request_type:
                response = client.delete_logging_configuration(
                    ResourceArn=event['OldResourceProperties']['WAFWebACLArn']
                )
                response = client.put_logging_configuration(
                  LoggingConfiguration={
                    'ResourceArn': event['ResourceProperties']['WAFWebACLArn'],
                    'LogDestinationConfigs': [event['ResourceProperties']['DeliveryStreamArn']]
                  }
                )
              elif 'DELETE' in request_type:
                response = client.delete_logging_configuration(
                    ResourceArn=event['ResourceProperties']['WAFWebACLArn']
                )
              cfnresponse.send(event, context, cfnresponse.SUCCESS, response)
            except Exception as e:
              cfnresponse.send(event, context, cfnresponse.FAILED, {})
      Runtime: python3.8
      MemorySize: 128
      Timeout: 300
